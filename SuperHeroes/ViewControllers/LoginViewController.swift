//
//  LoginViewController.swift
//  SuperHeroes
//
//  Created by Oleksandr Sudarchuk on 13/08/2025.
//

import UIKit
import FirebaseAuth

class LoginViewController: UIViewController {
    //MARK: - Variables
     let loginView = LoginView()
    //MARK: - LifeCycle
    override func viewDidLoad() {
        super.viewDidLoad()
        self.view.backgroundColor = .lightWhite
        loginView.forgotPasswordButton.addTarget(self, action: #selector(didTapForgotButton), for: .touchUpInside)
        loginView.loginButton.addTarget(self, action: #selector(didTapLoginButton), for: .touchUpInside)
        loginView.loginGoogleButton.addTarget(self, action: #selector(didTapLoginGoogleButton), for: .touchUpInside)
        loginView.singupButton.addTarget(self, action: #selector(didTapSingupButton), for: .touchUpInside)
        
    }
    
    override func viewDidAppear(_ animated: Bool) {
        super.viewDidAppear(animated)
        loginView.emailTextField.becomeFirstResponder()
        loginView.emailTextField.isHidden = false
        if let scene = UIApplication.shared.connectedScenes.first as? UIWindowScene {
                for win in scene.windows {
                    print("ü™ü window:", win, "key:", win.isKeyWindow, "level:", win.windowLevel.rawValue)
                    win.windowLevel = .normal
                    win.isHidden = false
                    win.isUserInteractionEnabled = true
                }
            }

            // 2) —É–∑–Ω–∞—ë–º –ö–¢–û –ø–µ—Ä–µ–∫—Ä—ã–≤–∞–µ—Ç —Ü–µ–Ω—Ç—Ä –∫–Ω–æ–ø–∫–∏
            let p = view.convert(loginView.loginButton.center, from: loginView)
            let hit = view.hitTest(p, with: nil)
            print("üéØ hit at loginButton.center ->", hit.map { String(describing: type(of: $0)) } ?? "nil")

            // 3) –≤—Ä–µ–º–µ–Ω–Ω–æ –æ—Ç–∫–ª—é—á–∞–µ–º –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤ —É —Ç–æ–≥–æ, –∫—Ç–æ –Ω–µ –∫–Ω–æ–ø–∫–∞
            if let hit, hit !== loginView.loginButton {
                print("üö´ disabling interaction on:", type(of: hit))
                hit.isUserInteractionEnabled = false
                // –µ—Å–ª–∏ —ç—Ç–æ –∂–µ—Å—Ç—ã ‚Äî —á—Ç–æ–±—ã —Ç–∞–ø—ã –Ω–µ —Å—ä–µ–¥–∞–ª–∏—Å—å
                hit.gestureRecognizers?.forEach { $0.cancelsTouchesInView = false }
            }

            // 4) –Ω–∞ –≤—Å—è–∫–∏–π –æ—Ç–∫–ª—é—á–∏–º –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤ —É –¥–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω—ã—Ö –≤—å—é (–æ–Ω–∏ –Ω–µ –¥–æ–ª–∂–Ω—ã –ª–æ–≤–∏—Ç—å —Ç–∞–ø—ã)
            loginView.headerView.isUserInteractionEnabled = false
            loginView.separateView.isUserInteractionEnabled = false

            // 5) –Ω–∞ —Å–∞–º–æ–π –∫–æ—Ä–Ω–µ–≤–æ–π –≤—å—é ‚Äî –Ω–∏–∫–∞–∫–∏–µ –∂–µ—Å—Ç—ã –Ω–µ –¥–æ–ª–∂–Ω—ã –≥–∞—Å–∏—Ç—å —Ç–∞–ø—ã
            view.gestureRecognizers?.forEach { $0.cancelsTouchesInView = false }
        
        
    }
    override func loadView() {
        view = loginView
    }
    
    
    //MARK: - Selectors
    @objc func didTapForgotButton() {
        let vc = ForgotViewController()
        self.navigationController?.pushViewController(vc, animated: true)
    }
    @objc func didTapLoginButton() {
        let loginRequeste = LoginUserRequeste(email: loginView.emailTextField.text ?? "", password: loginView.passwordTextField.text ?? "")
        
        if !Validator.isValidEmail(with: loginRequeste.email) {
            AlertManager.showInvalidEmailAlert(on: self)
            return
        }
        
        if !Validator.isValidPassword(with: loginRequeste.password) {
            AlertManager.showInvalidPasswordAlert(on: self)
            return
        }
        AuthManager.shared.singInUser(with: loginRequeste) { [weak self] error in
            guard let self = self else {return}
            if let error = error {
               // self.showAuthError(error)
                AlertManager.showSinginErrorAlert(on: self, with: error)
                return
            }
            
            if let sceneDelegate = self.view.window?.windowScene?.delegate as? SceneDelegate {
                sceneDelegate.chekAuthentiction()
            }
        }
        
    }
    @objc func didTapLoginGoogleButton() {
        
    }
    @objc func didTapSingupButton() {
        let vc = RegisterViewController()
        self.navigationController?.pushViewController(vc, animated: true)
    }
//    
//    private func showAuthError(_ error: Error, title: String = "Sign in error") {
//        let ns = error as NSError
//
//        if let authError = AuthErrorCode(_bridgedNSError: ns) {
//            let code = authError.code
//            print("[AUTH]", title, "code:", code, "desc:", ns.localizedDescription)
//
//            let message: String
//            switch code {
//            case .invalidEmail:      message = "–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç email."
//            case .userNotFound:      message = "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω."
//            case .wrongPassword:     message = "–ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å."
//            case .userDisabled:      message = "–ê–∫–∫–∞—É–Ω—Ç –æ—Ç–∫–ª—é—á—ë–Ω."
//            case .tooManyRequests:   message = "–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –ø–æ–ø—ã—Ç–æ–∫. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
//            case .invalidCredential: message = "–ù–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–µ —É—á—ë—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ."
//            default:                 message = ns.localizedDescription
//            }
//
//            let alert = UIAlertController(title: title, message: message, preferredStyle: .alert)
//            alert.addAction(UIAlertAction(title: "OK", style: .default))
//            present(alert, animated: true)
//        } else {
//            // –û—à–∏–±–∫–∞ –Ω–µ –æ—Ç Auth ‚Üí –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–∞–∫ –µ—Å—Ç—å
//            print("[AUTH]", title, "non-Auth error:", ns.localizedDescription)
//
//            let alert = UIAlertController(title: title,
//                                          message: ns.localizedDescription,
//                                          preferredStyle: .alert)
//            alert.addAction(UIAlertAction(title: "OK", style: .default))
//            present(alert, animated: true)
//        }
//    }
}
